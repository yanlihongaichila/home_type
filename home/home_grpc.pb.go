// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.19.4
// source: home.proto

package home

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Home_Ping_FullMethodName            = "/home.Home/Ping"
	Home_SearchTop_FullMethodName       = "/home.Home/SearchTop"
	Home_SearchSlideshow_FullMethodName = "/home.Home/SearchSlideshow"
	Home_SearchMainBody_FullMethodName  = "/home.Home/SearchMainBody"
	Home_SearchBottom_FullMethodName    = "/home.Home/SearchBottom"
)

// HomeClient is the client API for Home service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type HomeClient interface {
	Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	SearchTop(ctx context.Context, in *SearchTopRequest, opts ...grpc.CallOption) (*SearchTopResponse, error)
	SearchSlideshow(ctx context.Context, in *SearchSlideshowRequest, opts ...grpc.CallOption) (*SearchSlideshowResponse, error)
	SearchMainBody(ctx context.Context, in *SearchMainBodyRequest, opts ...grpc.CallOption) (*SearchMainBodyResponse, error)
	SearchBottom(ctx context.Context, in *SearchBottomRequest, opts ...grpc.CallOption) (*SearchBottomResponse, error)
}

type homeClient struct {
	cc grpc.ClientConnInterface
}

func NewHomeClient(cc grpc.ClientConnInterface) HomeClient {
	return &homeClient{cc}
}

func (c *homeClient) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, Home_Ping_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeClient) SearchTop(ctx context.Context, in *SearchTopRequest, opts ...grpc.CallOption) (*SearchTopResponse, error) {
	out := new(SearchTopResponse)
	err := c.cc.Invoke(ctx, Home_SearchTop_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeClient) SearchSlideshow(ctx context.Context, in *SearchSlideshowRequest, opts ...grpc.CallOption) (*SearchSlideshowResponse, error) {
	out := new(SearchSlideshowResponse)
	err := c.cc.Invoke(ctx, Home_SearchSlideshow_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeClient) SearchMainBody(ctx context.Context, in *SearchMainBodyRequest, opts ...grpc.CallOption) (*SearchMainBodyResponse, error) {
	out := new(SearchMainBodyResponse)
	err := c.cc.Invoke(ctx, Home_SearchMainBody_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeClient) SearchBottom(ctx context.Context, in *SearchBottomRequest, opts ...grpc.CallOption) (*SearchBottomResponse, error) {
	out := new(SearchBottomResponse)
	err := c.cc.Invoke(ctx, Home_SearchBottom_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HomeServer is the server API for Home service.
// All implementations must embed UnimplementedHomeServer
// for forward compatibility
type HomeServer interface {
	Ping(context.Context, *Request) (*Response, error)
	SearchTop(context.Context, *SearchTopRequest) (*SearchTopResponse, error)
	SearchSlideshow(context.Context, *SearchSlideshowRequest) (*SearchSlideshowResponse, error)
	SearchMainBody(context.Context, *SearchMainBodyRequest) (*SearchMainBodyResponse, error)
	SearchBottom(context.Context, *SearchBottomRequest) (*SearchBottomResponse, error)
	mustEmbedUnimplementedHomeServer()
}

// UnimplementedHomeServer must be embedded to have forward compatible implementations.
type UnimplementedHomeServer struct {
}

func (UnimplementedHomeServer) Ping(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (UnimplementedHomeServer) SearchTop(context.Context, *SearchTopRequest) (*SearchTopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchTop not implemented")
}
func (UnimplementedHomeServer) SearchSlideshow(context.Context, *SearchSlideshowRequest) (*SearchSlideshowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSlideshow not implemented")
}
func (UnimplementedHomeServer) SearchMainBody(context.Context, *SearchMainBodyRequest) (*SearchMainBodyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchMainBody not implemented")
}
func (UnimplementedHomeServer) SearchBottom(context.Context, *SearchBottomRequest) (*SearchBottomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchBottom not implemented")
}
func (UnimplementedHomeServer) mustEmbedUnimplementedHomeServer() {}

// UnsafeHomeServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to HomeServer will
// result in compilation errors.
type UnsafeHomeServer interface {
	mustEmbedUnimplementedHomeServer()
}

func RegisterHomeServer(s grpc.ServiceRegistrar, srv HomeServer) {
	s.RegisterService(&Home_ServiceDesc, srv)
}

func _Home_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Home_Ping_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeServer).Ping(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Home_SearchTop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchTopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeServer).SearchTop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Home_SearchTop_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeServer).SearchTop(ctx, req.(*SearchTopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Home_SearchSlideshow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSlideshowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeServer).SearchSlideshow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Home_SearchSlideshow_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeServer).SearchSlideshow(ctx, req.(*SearchSlideshowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Home_SearchMainBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchMainBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeServer).SearchMainBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Home_SearchMainBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeServer).SearchMainBody(ctx, req.(*SearchMainBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Home_SearchBottom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchBottomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeServer).SearchBottom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Home_SearchBottom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeServer).SearchBottom(ctx, req.(*SearchBottomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Home_ServiceDesc is the grpc.ServiceDesc for Home service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Home_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "home.Home",
	HandlerType: (*HomeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Home_Ping_Handler,
		},
		{
			MethodName: "SearchTop",
			Handler:    _Home_SearchTop_Handler,
		},
		{
			MethodName: "SearchSlideshow",
			Handler:    _Home_SearchSlideshow_Handler,
		},
		{
			MethodName: "SearchMainBody",
			Handler:    _Home_SearchMainBody_Handler,
		},
		{
			MethodName: "SearchBottom",
			Handler:    _Home_SearchBottom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "home.proto",
}
